pipeline {
  agent {
    docker {
      image 'bharavi19/maven-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    GIT_USER_NAME = "Narasimha-Potturi"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_BRANCH = "main"
    GIT_EMAIL = "xyz2000@gmail.com"
    GIT_NAME = "Narasimha Potturi"
    DEPLOYMENT_FILE = "CD/deployment.yml"
  }

  stages {
    stage('Checkout') {
      steps {
        cleanWs()
        git branch: 'main', url: 'https://github.com/Narasimha-Potturi/Jenkins-Zero-To-Hero.git'
      }
    }

    // stage('Build and Test') {
    //   steps {
    //     sh 'mvn clean install'
    //   }
    // }

    // stage('Static Code Analysis') {
    //   steps {
    //     withSonarQubeEnv('SonarQube') {
    //       sh 'mvn sonar:sonar'
    //     }
    //   }
    // }

    // stage('Build and Push Docker Image') {
    //   steps {
    //     sh 'docker build -t myapp:${BUILD_NUMBER} .'
    //     sh 'docker tag myapp:${BUILD_NUMBER} myrepo/myapp:${BUILD_NUMBER}'
    //     sh 'docker push myrepo/myapp:${BUILD_NUMBER}'
    //   }
    // }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {

          // Debug: Workspace and file checks
          sh 'echo "===== DEBUG: Working Directory =====" && pwd'
          sh 'echo "===== DEBUG: Listing Workspace =====" && ls -la'
          sh 'echo "===== DEBUG: Listing CD/ Directory =====" && ls -la CD/'
          sh 'echo "===== DEBUG: deployment.yml BEFORE =====" && cat CD/deployment.yml || echo "deployment.yml not found!"'

          // Git identity config
          sh 'git config user.email "${GIT_EMAIL}"'
          sh 'git config user.name "${GIT_NAME}"'

          // Replace placeholder with BUILD_NUMBER
          sh 'sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" "${DEPLOYMENT_FILE}"'

          // Show updated file
          sh 'echo "===== DEBUG: deployment.yml AFTER =====" && cat "${DEPLOYMENT_FILE}" || echo "deployment.yml not found!"'

          // Git add, commit, and push
          sh 'git add "${DEPLOYMENT_FILE}"'
          sh 'git commit -m "Updated Deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"'
          sh '''
            git -c credential.helper= -c core.askPass=true \
              push "https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git" HEAD:${GIT_BRANCH}
          '''

          // Git status after push
          sh 'echo "===== DEBUG: Git Status =====" && git status'
        }
      }
    }
  }
}
